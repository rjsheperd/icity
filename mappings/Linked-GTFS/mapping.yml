# Prefixes
prefixes:
  rr:      http://www.w3.org/ns/r2rml#
  foaf:    http://xmIns.com/foaf/0.1/
  xsd:     http://www.w3.org/2001/XMLSchema#
  rdfs:    http://www.w3.org/2000/01/rdf-schema#
  dc:      http://purl.org/dc/elements/1.1/
  rev:     http://purl.org/stuff/rev#
  gtfs:    http://vocab.gtfs.org/terms#
  geo:     http://www.w3.org/2003/01/geo/wgs84_pos#
  schema:  http://schema.org/
  dct:     http://purl.org/dc/terms/
  rml:     http://semweb.mmlab.be/ns/rml#
  q1:      http://semweb.mmlab.be/ns/q1#
  rdf:     http://www.w3.org/1999/02/22-rdf-syntax-ns#
  mad:     http://transport.linkeddata.es/madrid/metro/
  gtfsres: http://transport.linkeddata.es/resource/

mappings:
  # Agency
  agency:
   sources:
     - [agency.csv~csv]
   s: mad:agency/$(agency_id)
   po:
     - [a, gtfs:Agency]
     - [foaf:page, $(agency_url)~iri]
     - [foaf:name, $(agency_name)]
     - [gtfs:tim-Zone, $(agency_timezone)]
     - [dct:language, $(agency_lang)]
     - [foaf:phone, $(agency_phone)]
     - [gtfs:fareUrl, $(agency_fare_url)~iri]
  
  # Calendar Date Rules
  calendar_date_rules:
   sources:
     - [calendar_dates.csv~csv]
   s: mad:calendar_date_rule/$(service_id)-$(date)
   po:
     - [a, gtfs:CalendarDateRule] 
     - [dct:date, $(date), xsd:date]
     - [gtfs:dateAddition, $(exception_type), xsd:boolean]
  
  # Calendar Rules
  calendar_rules:
   sources:
     - [calendar.csv~csv]
   s: mad:calendar_rules/$(service_id)
   po:
     - [a, gtfs:CalendarRule]
     - [gtfs:monday, $(monday), xsd:boolean]
     - [gtfs:tuesday, $(tuesday), xsd:boolean]
     - [gtfs:wednesday, $(wednesday), xsd:boolean] 
     - [gtfs:thursday, $(thursday), xsd:boolean] 
     - [gtfs:friday, $(friday), xsd:boolean]
     - [gtfs:saturday, $ (saturday), xsd:boolean] 
     - [gtfs:sunday, $(sunday), xsd: boolean] 
     - [schema:startDate, $(start_date), xsd:date] 
     - [schema:endDate, $(end_date), xsd:date]
  
  # Feed Info
  feed:
   sources:
     - [feed_info.csv~csv]
   s: mad:feed/$(feed_publisher_name)
   po:
     - [a, gtfs:Feed]
     - [dct:publisher, $(feed_publisher_name)]
     - [foaf:page, $(feed_published_url)~iri]
     - [dct:language, $(feed_lang)]
     - [schema:startDate, $(feed_start_date), xsd:date]
     - [schema:endDate, $(feed_end_date), xsd:date]
     - [schema:version, $(feed_version)]
  
  # Frequencies
  frequencies:
   sources:
    - [frequencies.csv~csv]
   s: mad:frequency/$(trip_id)-$(start_time)
   po:
     - [a, gtfs:Frequency]
     - [gtfs:startTime, $(start_time)]
     - [gtfs: endTime, $(end_time)]
     - [gtfs:headwaySeconds, $(headway_secs), xsd:integer]
     - [gtfs: exactTimes, $(exact_times), xsd:boolean]
     - p: gtfs:trip
       o:
         - mapping: trips
           condition:
             function: equal
             parameters:
               - [str1, $(trip_id)]
               - [str2, $(trip_id)]
  
  # Routes
  routes:
   sources:
    - [routes.csv~csv]
   s: mad:routes/$(route_id)
   po:
   - [a, gtfs:Route]
   - [gtfs:shortName, $(route_short_name)]
   - [gtfs:longName, $(route_long_name)]
   - [dct:description, $(route_desc)]
   - [gtfs:routeType, gtfsres:RouteType/$(route_type)~iri]
   - [gtfs:routeUrl, $(route_ur1)~iri]
   - [gtfs:color, $(route_color)]
   - [gtfs:textColor, $(route_text_color)]
   - p: gtfs:agency
     o: 
       - mapping: agency
         condition:
           function: equal
           parameters:
             - [str1, $(agency_id)]
             - [str2, $(agency_id)]
  
  # Service Calendar Dates
  services2:
   sources:
    - [calendar_dates.csv~csv]
   s: mad:services/$(service_id)
   po:
    - [a, gtfs:Service]
    - p: gtfs:serviceRule
      o:
        - mapping: calendar_date_rules
          condition:
            function: equal
            parameters:
              - [str1, $(service_id)]
              - [str2, $(service_id)]
  
  #Service Calendar
  services1:
   sources:
    - [calendar.csv~csv]
   s: mad:services/$(service_id)
   po:
    - [a, gtfs:Service]
    - p: gtfs:serviceRule
      o:
        - mapping: calendar_rules
          condition:
            function: equal
            parameters:
              - [str1, $(service_id)]
              - [str2, $(service_id)]
  
  # Shapes
  shapes:
   sources:
    - [shapes.csv~csv]
   s: mad:shape/$(shape_id)-$(shape_pt_sequence)
   po:
    - [a, gtfs:Shape]
    - [geo:lat, $(shape_pt_lat), xsd:double]
    - [geo:long, $(shape_pt_lon), xsd:double]
    - [gtfs:pointSequence, $(shape_pt_sequence)]
    - [gtfs:distanceTraveled, $(shape_dist_traveled)]

  # Trips
  trips:
   sources:
    - [trips.csv~csv]
   s: mad:trips/$(trip_id)
   po:
    - [a, gtfs:Trip]
    - [gtfs: headsign, $(trip_headsign)]
    - [gtfs: shortName, $(trip_short_name)]
    - [gtfs:direction, $(direction_id)]
    - [gtfs:block, $(block_id)]
    - [gtfs: wheelchairAccessible,gtfsres:WheelchairBoardingStatus/$(wheelchair_accessible)~iri]
    - p: gtfs:service
      o:
        - mapping: services1
          condition:
            function: equal
            parameters:
              - [str1, $(service_id)]
              - [str2, $(service_id)]
        - mapping: services2
          condition:
            function: equal
            parameters:
              - [str1, $(service_id)]
              - [str2, $(service_id)]
    - p: gtfs:route
      o:
        - mapping: routes
          condition:
            function: equal
            parameters:
              - [str1, $(route_id)]
              - [str2, $(route_id)]
    - p: gtfs:shape
      o:
        - mapping: shapes
          condition:
            function: equal
            parameters:
              - [str1, $(shape_id)]
              - [str2, $(shape_id)]
  
  # Stop Times
  stoptimes:
   sources:
    - [stop_times.csv~csv]
   s: mad:metro/stoptimes/$(trip_id)-$(stop_id)-$(arrival_time)
   po:
    - [a, gtfs: StopTime]
    - [gtfs:arrivalTime, $(arrival_time),xsd:duration]
    - [gtfs:departurelime, , $(departure_time), xsd:duration]
    - [gtfs:stopSequence, $(stop_sequence), xsd:integer]
    - [gtfs:headsign, $(stop_headsign)]
    - [gtfs:pickupType, gtfsres:PickupType/$(pickup_type)~iri]
    - [gtfs:dropOffType, gtfsres:DropOffType/$(drop_off_type)~iri]
    - [gtfs:distanceTraveled, $(shape_dist_traveled)]
    - p: gtfs:trip
      o:
        - mapping: trips
          condition:
            function: equal
            parameters:
              - [str1, $(trip_id)]
              - [str2, $(trip_id)]
    - p: gtfs:stop
      o:
        - mapping: stops
          condition:
            function: equal
            parameters:
              - [str1, $(stop_id)]
              - [str2, $(stop_id)]
  
